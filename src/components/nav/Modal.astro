---
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'div'> {};

const { ...attr } = Astro.props;
---

<div {...attr} class={`bg-black/90 z-50 w-screen h-screen hidden top-0 left-0 absolute justify-center items-center`}>
  <div class="bg-[#151515] lg:w-[70vw] lg:max-h-[80vh] lg:min-h-fit overflow-y-auto border border-[#5C5C5C] rounded-xl shadow-md flex flex-col gap-6 px-8 py-5">
    <slot/>
  </div>
</div>

<script>
  const closeModalBtn = document.querySelector(
    "#closeModal"
  ) as HTMLButtonElement;
  const modal = document.querySelector("#modal") as HTMLDivElement;
  const createNoteBtn = document.querySelector("#createNote") as HTMLButtonElement;
  
  closeModalBtn.addEventListener("click", () => {
    modal.classList.remove("flex");
    modal.classList.add("hidden");
  });

  createNoteBtn.addEventListener('click', async () => {
    const noteName = (document.querySelector('#noteName') as HTMLInputElement).value
    const selectedFolder = (document.querySelector('input[name="folder"]:checked') as HTMLInputElement).value; 
    const noteContent = (document.querySelector('#noteEditor') as HTMLTextAreaElement).value;
    
    await fetch('http://localhost:3001/createnote', {
        method: 'POST',
        mode: 'cors',
        body: JSON.stringify({
            name: noteName,
            content: noteContent,
            type: selectedFolder,
        }),
        headers: {
            "Content-Type": 'application/json',
        }
    }).then((res) => {
      console.log(res.status);
      console.log(res.statusText);
    })
  });
</script>
<script src="../../scripts/modal.ts" ></script>
